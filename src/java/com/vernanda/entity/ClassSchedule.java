package com.vernanda.entity;
// Generated Apr 12, 2018 4:13:21 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ClassSchedule generated by hbm2java
 */
@Entity
@Table(name="class_schedule"
    ,catalog="ujitarobby_attendance_system"
)
public class ClassSchedule  implements java.io.Serializable {


     private ClassScheduleId id;
     private AcademicYear academicYear;
     private Course course;
     private Lecturer lecturer;
     private Room room;
     private Semester semester;
     private Date startTime;
     private Date endTime;
     private short day;
     private Set<Student> students = new HashSet<Student>(0);

    public ClassSchedule() {
    }

	
    public ClassSchedule(ClassScheduleId id, AcademicYear academicYear, Course course, Lecturer lecturer, Room room, Semester semester, Date startTime, Date endTime, short day) {
        this.id = id;
        this.academicYear = academicYear;
        this.course = course;
        this.lecturer = lecturer;
        this.room = room;
        this.semester = semester;
        this.startTime = startTime;
        this.endTime = endTime;
        this.day = day;
    }
    public ClassSchedule(ClassScheduleId id, AcademicYear academicYear, Course course, Lecturer lecturer, Room room, Semester semester, Date startTime, Date endTime, short day, Set<Student> students) {
       this.id = id;
       this.academicYear = academicYear;
       this.course = course;
       this.lecturer = lecturer;
       this.room = room;
       this.semester = semester;
       this.startTime = startTime;
       this.endTime = endTime;
       this.day = day;
       this.students = students;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="classSelection", column=@Column(name="class_selection", nullable=false, length=1) ), 
        @AttributeOverride(name="type", column=@Column(name="type", nullable=false) ), 
        @AttributeOverride(name="lecturerNik", column=@Column(name="lecturer_nik", nullable=false, length=8) ), 
        @AttributeOverride(name="roomId", column=@Column(name="room_id", nullable=false) ), 
        @AttributeOverride(name="academicYearId", column=@Column(name="academic_year_id", nullable=false) ), 
        @AttributeOverride(name="semesterId", column=@Column(name="semester_id", nullable=false) ), 
        @AttributeOverride(name="courseId", column=@Column(name="course_id", nullable=false, length=5) ) } )
    public ClassScheduleId getId() {
        return this.id;
    }
    
    public void setId(ClassScheduleId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="academic_year_id", nullable=false, insertable=false, updatable=false)
    public AcademicYear getAcademicYear() {
        return this.academicYear;
    }
    
    public void setAcademicYear(AcademicYear academicYear) {
        this.academicYear = academicYear;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="course_id", nullable=false, insertable=false, updatable=false)
    public Course getCourse() {
        return this.course;
    }
    
    public void setCourse(Course course) {
        this.course = course;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="lecturer_nik", nullable=false, insertable=false, updatable=false)
    public Lecturer getLecturer() {
        return this.lecturer;
    }
    
    public void setLecturer(Lecturer lecturer) {
        this.lecturer = lecturer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="room_id", nullable=false, insertable=false, updatable=false)
    public Room getRoom() {
        return this.room;
    }
    
    public void setRoom(Room room) {
        this.room = room;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="semester_id", nullable=false, insertable=false, updatable=false)
    public Semester getSemester() {
        return this.semester;
    }
    
    public void setSemester(Semester semester) {
        this.semester = semester;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="start_time", nullable=false, length=8)
    public Date getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="end_time", nullable=false, length=8)
    public Date getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    
    @Column(name="day", nullable=false)
    public short getDay() {
        return this.day;
    }
    
    public void setDay(short day) {
        this.day = day;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="student_contract", catalog="ujitarobby_attendance_system", joinColumns = { 
        @JoinColumn(name="class_schedule_class_selection", nullable=false, updatable=false), 
        @JoinColumn(name="class_schedule_type", nullable=false, updatable=false), 
        @JoinColumn(name="class_schedule_lecturer_nik", nullable=false, updatable=false), 
        @JoinColumn(name="class_schedule_room_id", nullable=false, updatable=false), 
        @JoinColumn(name="class_schedule_academic_year_id", nullable=false, updatable=false), 
        @JoinColumn(name="class_schedule_semester_id", nullable=false, updatable=false), 
        @JoinColumn(name="class_schedule_course_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="student_id", nullable=false, updatable=false) })
    public Set<Student> getStudents() {
        return this.students;
    }
    
    public void setStudents(Set<Student> students) {
        this.students = students;
    }




}


